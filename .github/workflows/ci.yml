name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    name: Lint & Test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
        with:
          # Full history lets scanners (gitleaks, dependency-review, etc.) see past commits
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Quote extras to avoid pattern expansion in POSIX shells
          pip install '.[dev]'
      - name: Install fixed tool versions
        run: |
          # Pin versions to avoid sudden breaking changes
          python -m pip install "ruff==0.4.1" "mypy==1.10.0" "bandit==1.7.5"

      - name: Lint with Ruff
        run: ruff check .

      - name: Check formatting with Ruff
        run: ruff format --check .

      - name: Type check with mypy
        run: mypy .

      - name: Static analysis with Bandit
        run: |
          python -m pip install bandit
          bandit -q -r src/locksum -ll

      - name: Secrets scan with Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          # Needed since gitleaks-action v2 now requires an explicit token for PRs
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Prevent duplicate artifact name conflicts across matrix jobs
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: "false"

      - name: Dependency audit with pip-audit
        run: |
          python -m pip install pip-audit
          pip-audit

      - name: Run tests with coverage
        run: |
          pytest --cov=locksum --cov-report=xml --cov-fail-under=90

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          # Give each matrix job a unique artifact name to avoid 409 conflicts
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml 

      - name: Generate SBOM
        run: |
          python -m pip install cyclonedx-bom
          cyclonedx-py -o sbom.xml

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-${{ matrix.python-version }}
          path: sbom.xml 

  build-binary:
    name: Build PyInstaller binary (${{ matrix.os }})
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install '.[packaging]'

      - name: Build CLI binary
        run: |
          pyinstaller -F -m locksum.cli -n locksum-cli

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: locksum-cli-${{ matrix.os }}
          path: dist/locksum-cli* 